<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://lucas-y.github.io/</id>
    <title>前端小白</title>
    <updated>2020-12-08T10:09:46.841Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://lucas-y.github.io/"/>
    <link rel="self" href="https://lucas-y.github.io/atom.xml"/>
    <subtitle>知行合一</subtitle>
    <logo>https://lucas-y.github.io/images/avatar.png</logo>
    <icon>https://lucas-y.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 前端小白</rights>
    <entry>
        <title type="html"><![CDATA[demo]]></title>
        <id>https://lucas-y.github.io/post/demo/</id>
        <link href="https://lucas-y.github.io/post/demo/">
        </link>
        <updated>2020-12-08T10:09:34.000Z</updated>
        <content type="html"><![CDATA[<p>测试</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[重要知识点]]></title>
        <id>https://lucas-y.github.io/post/keypoints/</id>
        <link href="https://lucas-y.github.io/post/keypoints/">
        </link>
        <updated>2020-12-08T09:33:27.000Z</updated>
        <content type="html"><![CDATA[<h1 id="重要知识点">重要知识点</h1>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-976153"><label class="task-list-item-label" for="task-item-976153"> 面试题</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1651022"><label class="task-list-item-label" for="task-item-1651022"> 浏览器优化</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2927858"><label class="task-list-item-label" for="task-item-2927858"> 工作中遇到的难点</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5914443"><label class="task-list-item-label" for="task-item-5914443"> seo（花钱，html后缀，外链，标签语义化）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-295940"><label class="task-list-item-label" for="task-item-295940"> 前端开发优化问题</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4547893"><label class="task-list-item-label" for="task-item-4547893"> 浏览器兼容</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-389322"><label class="task-list-item-label" for="task-item-389322"> css</label>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8556797"><label class="task-list-item-label" for="task-item-8556797"> 双微元素清除</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9101343"><label class="task-list-item-label" for="task-item-9101343"> 浮动</label></li>
</ul>
</li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9276373"><label class="task-list-item-label" for="task-item-9276373"> HTML5（语义化，seo，移动端，游戏）</label></li>
</ul>
<h2 id="vue">vue</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6030383"><label class="task-list-item-label" for="task-item-6030383"> 父子组件生命周期触发时机</label>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9092999"><label class="task-list-item-label" for="task-item-9092999"> createdF ===> createdS</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7530672"><label class="task-list-item-label" for="task-item-7530672"> mountedS ===> mountedF</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5688469"><label class="task-list-item-label" for="task-item-5688469"> updatedS ===> updatedF</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5520947"><label class="task-list-item-label" for="task-item-5520947"> destroyedS ===> destroyedF</label></li>
</ul>
</li>
</ul>
<h2 id="react">react</h2>
<ul class="contains-task-list">
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9905551"><label class="task-list-item-label" for="task-item-9905551"> setState</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5107040"><label class="task-list-item-label" for="task-item-5107040"> 组件的更新机制依靠事务进行批量更新</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4214744"><label class="task-list-item-label" for="task-item-4214744"> 将state的更新延缓到最后批量合并再去渲染对于应用的性能优化是有极大好处的，如果每次的状态改变都去重新渲染真实dom，那么它将带来巨大的性能消耗。</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8566658"><label class="task-list-item-label" for="task-item-8566658"> 保证内部的一致性：即使state是同步更新，props也不是。（你只有在父组件重新渲染时才能知道props）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-569054"><label class="task-list-item-label" for="task-item-569054"> setState 只在合成事件和钩子函数中是“异步”的，在原生事件和 setTimeout 中都是同步的。生命周期函数和合成函数中调用setState表现异步更新，是因为组件初始化和调用合成函数时都会触发ReactDefaultBatchingStrategy事务的batchUpdates方法，将批量更新标记设置为true，所以后面的setState都会存储到dirtyComponents中，执行批量更新之后再将标志设置为false</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1630861"><label class="task-list-item-label" for="task-item-1630861"> setState的“异步”并不是说内部由异步代码实现，其实本身执行的过程和代码都是同步的，只是合成事件和钩子函数的调用顺序在更新之前，导致在合成事件和钩子函数中没法立马拿到更新后的值，形式了所谓的“异步”，当然可以通过第二个参数 setState(partialState, callback) 中的callback拿到更新后的结果</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2042239"><label class="task-list-item-label" for="task-item-2042239"> 生命周期</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8151991"><label class="task-list-item-label" for="task-item-8151991"> constructor->componentWillMount->render->componentDidMount</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7052229"><label class="task-list-item-label" for="task-item-7052229"> componentWillReceiveProps->shouldComponentUpdate->componentWillUpdate->render->componentDidUpdate</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1439534"><label class="task-list-item-label" for="task-item-1439534"> componentWillUnmount</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1046479"><label class="task-list-item-label" for="task-item-1046479"> componentDidCatch getDerivedStateFromError</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3837138"><label class="task-list-item-label" for="task-item-3837138"> react项目打包优化</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2748775"><label class="task-list-item-label" for="task-item-2748775"> antd-mobile组件库按需加载（react-app-rewired，customize-cra，babel-plugin-import，config-overrides.js）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1460379"><label class="task-list-item-label" for="task-item-1460379">  基于路由的代码分割实现组件的按需加载，提高首屏加载速度（React.lazy，import，Suspense，fallback）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7568924"><label class="task-list-item-label" for="task-item-7568924">  creat-react-app脚手架内部有大量优化</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-681710"><label class="task-list-item-label" for="task-item-681710"> 组件性能优化</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4058951"><label class="task-list-item-label" for="task-item-4058951"> 减轻state（无关数据或者ref，定时器绑this）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2040515"><label class="task-list-item-label" for="task-item-2040515"> shouldComponentUpdate</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9752050"><label class="task-list-item-label" for="task-item-9752050"> 纯组件</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1127764"> 列表map <strong>key</strong><label class="task-list-item-label" for="task-item-1127764"> 列表map **key**</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9613883"><label class="task-list-item-label" for="task-item-9613883"> 不可变性 创建新对象 而不是在原有引用上修改</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3497063"> <a href="https://juejin.cn/post/6844903813070094350">react副作用<label class="task-list-item-label" for="task-item-3497063"> [react副作用](https://juejin.cn/post/6844903813070094350)</label></p>
</li>
</ul>
<h2 id="css">css</h2>
<pre><code>继承&lt;通配符选择器&lt;标签选择器&lt;类选择器&lt;id选择器&lt;行内样式&lt;！important

解决marign的塌陷现象：
        1、父元素设置border-top
        2、父元素设置padding-top
        3、父元素设置overflow：hidden
        4、设置浮动
        5、display：inline-block
 
 清除浮动的几种方法：
      1、额外标签法 (在内容的最后，块级元素)
          1、在父元素内容的最后添加一个块级元素
          2、需要给块级元素设置一个清除浮动的核心代码  clear：both；
        缺点：就是在页面中添加了一些多余的标签

      2、单伪元素清除法
          本质上来说就是额外标签法，使用的是伪元素完成效果的！！
          ::after

      3、直接给父元素设置overflow：hidden

      4、简单粗暴：直接设置高度
 
 .clearfix::before,
    .clearfix::after {
      content: '';
      display: table;
    }
    .clearfix::after {
      clear: both;
    }
    /*兼容ie浏览器*/
    .clearfix {
      *zoom:1;
    }
</code></pre>
<h2 id="js">js</h2>
<ul class="contains-task-list">
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1883672"> <a href="https://juejin.im/post/5b8f76675188255c7c653811">eventloop<label class="task-list-item-label" for="task-item-1883672"> [eventloop](https://juejin.im/post/5b8f76675188255c7c653811)</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6919668"> <a href="https://juejin.im/post/5c41297cf265da613356d4ec">promise<label class="task-list-item-label" for="task-item-6919668"> [promise](https://juejin.im/post/5c41297cf265da613356d4ec)</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2583225"> <a href="https://www.bilibili.com/video/BV1MJ41197Eu?p=40">手写promise<label class="task-list-item-label" for="task-item-2583225"> [手写promise](https://www.bilibili.com/video/BV1MJ41197Eu?p=40)</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7709336"><label class="task-list-item-label" for="task-item-7709336"> 原型链</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9218582"><label class="task-list-item-label" for="task-item-9218582"> 任何一个对象，都有原型对象，原型对象本身又是一个对象，所以原型对象也有自己的原型对象，这样一环扣一环就形成了一个链式结构，我们把这个链式结构称为：原型链。</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9632323"> <a href="https://www.cnblogs.com/sarahwang/p/6870072.html">继承<label class="task-list-item-label" for="task-item-9632323"> [继承](https://www.cnblogs.com/sarahwang/p/6870072.html)</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6207464"><label class="task-list-item-label" for="task-item-6207464"> 原型链继承</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7747983"><label class="task-list-item-label" for="task-item-7747983"> 借用构造函数</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1271521"><label class="task-list-item-label" for="task-item-1271521"> 组合继承</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2126593"><label class="task-list-item-label" for="task-item-2126593"> 深拷贝 （封装递归函数，JSON.parse（JSON.stringify））</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2144146"><label class="task-list-item-label" for="task-item-2144146"> 浅拷贝 （Object.assign，...展开）</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8500553"><label class="task-list-item-label" for="task-item-8500553"> 闭包</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6542183"><label class="task-list-item-label" for="task-item-6542183"> 内函数访问外函数的局部变量，形成闭包（优：沙箱，插件；劣：内存泄漏）</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-92082"><label class="task-list-item-label" for="task-item-92082"> call（性能比apply好）,apply,bind</label></p>
<pre><code class="language-js">Function.prototype.myCall = function (_this = window, ...rest) {
  _this._this = this;
  const result = _this._this(...rest);
  delete _this._this;
  return result;
}
</code></pre>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6762949"><label class="task-list-item-label" for="task-item-6762949"> 前端模块化</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6452574"><label class="task-list-item-label" for="task-item-6452574"> 自执行函数</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7530680"><label class="task-list-item-label" for="task-item-7530680"> commonJS规范 node</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3007061"><label class="task-list-item-label" for="task-item-3007061"> esmodule ES6</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7595914"><label class="task-list-item-label" for="task-item-7595914"> AMD require.js 依赖前置</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1967119"><label class="task-list-item-label" for="task-item-1967119"> CMD sea.js 依赖就近</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3355891"><label class="task-list-item-label" for="task-item-3355891"> ==</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8803036"><label class="task-list-item-label" for="task-item-8803036"> NaN不等于任何值</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5352098"><label class="task-list-item-label" for="task-item-5352098"> null，undefined只等于null，undefined</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4782348"><label class="task-list-item-label" for="task-item-4782348"> 两边有数字或者布尔，转数字比较</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2408605"><label class="task-list-item-label" for="task-item-2408605"> 两边有字符串，转字符串比较</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7786102"><label class="task-list-item-label" for="task-item-7786102"> 复杂类型比地址( []转"", {}转"[object Object]" )</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5826366"><label class="task-list-item-label" for="task-item-5826366"> this</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5638370"><label class="task-list-item-label" for="task-item-5638370"> 事件处理程序里this指向事件源(注册事件的那个dom)</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5295030"><label class="task-list-item-label" for="task-item-5295030"> 构造函数（配合new）里的this指向刚刚创建的对象</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1687132"><label class="task-list-item-label" for="task-item-1687132"> setTimeout setInterval this指向window</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2841110"><label class="task-list-item-label" for="task-item-2841110"> 普通函数fn调用模式  fn() this===>>>window</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1794659"><label class="task-list-item-label" for="task-item-1794659"> 对象调用模式 obj.fn()  this===>>>obj(调用者)</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6856854"><label class="task-list-item-label" for="task-item-6856854"> call,apply,bind this===>>>第一个参数(没传参就是window)</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9473355"><label class="task-list-item-label" for="task-item-9473355"> 箭头函数没有this，所以如果箭头函数有this（this指向包裹它的局部作用域）</label></li>
<li>[ ]</li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6776059"><label class="task-list-item-label" for="task-item-6776059"> es6</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3439451"><label class="task-list-item-label" for="task-item-3439451"> let (有块级作用域，不能重复定义，不会预解析，先声明再使用，不挂到window)</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7496980"><label class="task-list-item-label" for="task-item-7496980"> const（有块级作用域，不能重复定义，不会预解析，先声明再使用,常量，定义就赋值，不挂到window）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3163956"><label class="task-list-item-label" for="task-item-3163956"> forEach,map,filter,some,every,find,findIndex，reduce</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1675066"><label class="task-list-item-label" for="task-item-1675066"> 解构赋值</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4054668"><label class="task-list-item-label" for="task-item-4054668"> 模版字符串</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7849423"><label class="task-list-item-label" for="task-item-7849423"> 字符串新增startsWith，endsWith，includes</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6118667"><label class="task-list-item-label" for="task-item-6118667"> 箭头函数</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4046850"><label class="task-list-item-label" for="task-item-4046850"> 函数默认值，剩余参数</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3043815"><label class="task-list-item-label" for="task-item-3043815"> 对象属性简写，方法简写</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7912322"><label class="task-list-item-label" for="task-item-7912322"> ...展开运算符</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9941523"><label class="task-list-item-label" for="task-item-9941523"> set，map</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1733642"><label class="task-list-item-label" for="task-item-1733642"> 浏览器存储</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9351182"><label class="task-list-item-label" for="task-item-9351182"> cookie 小 每次请求自动携带 有销毁时间</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1403455"><label class="task-list-item-label" for="task-item-1403455"> localStorage 大 手动清理</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8353065"><label class="task-list-item-label" for="task-item-8353065"> sessionStorage 大 页面关闭就清理</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-916809"><label class="task-list-item-label" for="task-item-916809"> indexDB 用不完 手动清理</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2792015"><label class="task-list-item-label" for="task-item-2792015"> async （Promise的语法糖）es7</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2664574"><label class="task-list-item-label" for="task-item-2664574"> addEventLisntener(第三个参数如果true，表示该事件在捕获阶段执行，  如果false，表示事件在冒泡阶段执行。默认在冒泡阶段执行)</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7942716"><label class="task-list-item-label" for="task-item-7942716"> new做了什么？</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6683526"><label class="task-list-item-label" for="task-item-6683526"> 创建对象 this指向该对象</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6748387"><label class="task-list-item-label" for="task-item-6748387"> 继承函数原型</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9383043"><label class="task-list-item-label" for="task-item-9383043"> 实例化</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6799335"><label class="task-list-item-label" for="task-item-6799335"> 隐式返回该对象</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9729767"><label class="task-list-item-label" for="task-item-9729767"> webpack</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3999815"><label class="task-list-item-label" for="task-item-3999815"> entry</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-6950838"><label class="task-list-item-label" for="task-item-6950838"> output</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3739901"><label class="task-list-item-label" for="task-item-3739901"> module（loader）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3830953"><label class="task-list-item-label" for="task-item-3830953"> plugins</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-48324"><label class="task-list-item-label" for="task-item-48324"> devServer</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5401533"><label class="task-list-item-label" for="task-item-5401533"> mode</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2285804"> <a href="https://segmentfault.com/a/1190000015597029">跨域<label class="task-list-item-label" for="task-item-2285804"> [跨域](https://segmentfault.com/a/1190000015597029)</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9065105"><label class="task-list-item-label" for="task-item-9065105"> node（运行环境，允许js运行在服务端）</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1753168"><label class="task-list-item-label" for="task-item-1753168"> global顶级变量</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2970655"><label class="task-list-item-label" for="task-item-2970655"> fs模块 path模块</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4909571"><label class="task-list-item-label" for="task-item-4909571"> http模块</label></li>
</ul>
<pre><code class="language-js">  const http = require('http')
  const server = http.createServer()
  server.listen(8888, () =&gt; {
    console.log('恭喜你，服务器启动成功了')
  })
  server.on('request', (req, res) =&gt; {
    console.log('来了老弟')
    res.end('hello old brother')
  })
</code></pre>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7637871"><label class="task-list-item-label" for="task-item-7637871"> 浏览器垃圾回收机制</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4829395"><label class="task-list-item-label" for="task-item-4829395"> 引用计数（循环引用无法解决）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9859972"><label class="task-list-item-label" for="task-item-9859972"> 标记清除</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9491034"> 节流（指定时间间隔只触发一次）<a href="https://segmentfault.com/a/1190000018428170">link<label class="task-list-item-label" for="task-item-9491034"> 节流（指定时间间隔只触发一次）[link](https://segmentfault.com/a/1190000018428170)</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-525050"><label class="task-list-item-label" for="task-item-525050"> 防抖（动作触发后指定时间间隔内不再触发，执行某个函数）</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9566493"> <a href="https://juejin.im/post/59aa71d56fb9a0248d24fae3">箭头函数 this</a> <strong>定义函数时所在上下文中的 this</strong><label class="task-list-item-label" for="task-item-9566493"> [箭头函数 this](https://juejin.im/post/59aa71d56fb9a0248d24fae3) **定义函数时所在上下文中的 this**</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9941639"><label class="task-list-item-label" for="task-item-9941639"> 异步</label></p>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5984066"><label class="task-list-item-label" for="task-item-5984066"> 回调（解决同步，回调地狱）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8242462"><label class="task-list-item-label" for="task-item-8242462"> promise（解决回调地狱，无法取消promise）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2111540"><label class="task-list-item-label" for="task-item-2111540"> generator（可以控制函数执行，dva）</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9352253"><label class="task-list-item-label" for="task-item-9352253"> async await（代码清晰，性能低）</label></li>
</ul>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7153890"> <a href="https://juejin.im/post/5a276865f265da432c23b8d2">http常见状态码<label class="task-list-item-label" for="task-item-7153890"> [http常见状态码](https://juejin.im/post/5a276865f265da432c23b8d2)</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-4303950"><label class="task-list-item-label" for="task-item-4303950"> git cherry-pick 8d03e78 用来复制某个分支上的某次提交</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9613914"><label class="task-list-item-label" for="task-item-9613914"> 两个已经提交的分支的相同文件相同位置的的不同操作进行了合并.就是冲突</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8573804"> <a href="https://blog.csdn.net/jdsjlzx/article/details/98654951">git tag 使用<label class="task-list-item-label" for="task-item-8573804"> [git tag 使用](https://blog.csdn.net/jdsjlzx/article/details/98654951)</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5317914"><label class="task-list-item-label" for="task-item-5317914"> git stash -u  /  git stash pop</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5962862"> <a href="https://www.cnblogs.com/dyh-air/p/9257237.html">git push -u origin master<label class="task-list-item-label" for="task-item-5962862"> [git push -u origin master](https://www.cnblogs.com/dyh-air/p/9257237.html)</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-765341"> <a href="https://blog.csdn.net/weixin_44761910/article/details/105029748">Git本地与远程分支间建立追踪关系<label class="task-list-item-label" for="task-item-765341"> [Git本地与远程分支间建立追踪关系](https://blog.csdn.net/weixin_44761910/article/details/105029748)</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-761821"> <a href="https://blog.csdn.net/L_serein/article/details/8550976?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">navigator.userAgent<label class="task-list-item-label" for="task-item-761821"> [navigator.userAgent](https://blog.csdn.net/L_serein/article/details/8550976?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control)</label></p>
</li>
<li class="task-list-item">
<p><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1777322"> <a href="https://blog.csdn.net/huang100qi/article/details/80237555">hash/histroy<label class="task-list-item-label" for="task-item-1777322"> [hash/histroy](https://blog.csdn.net/huang100qi/article/details/80237555)</label></p>
</li>
</ul>
<h2 id="hook">hook</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-5834451"> <a href="https://juejin.cn/post/6844903813070094350">react副作用<label class="task-list-item-label" for="task-item-5834451"> [react副作用](https://juejin.cn/post/6844903813070094350)</label></li>
</ul>
<h2 id="typescript">typescript</h2>
]]></content>
    </entry>
</feed>